
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bdd;

import java.awt.Choice;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author hanane
 */
public class Intro extends javax.swing.JFrame {
    DefaultTableModel model,model2,model3,model4;
    int mouseX,mouseY;
    String r1="les informations sur les clients";
    String r2="les informations sur les clients qui habitenet à Tiaret";
    String r3="les informations sur les clients dont le nom commence par M";
    String r4="les informations sur les clients dont le nom ne commence par par M";
    String r5="les informations sur les clients qui habitenet à Tiaret ou Oran ou Alger";
    String r6="les informations sur les clients dont la ville n'est pas renseignè";
    String r7="les noms des clients";
    String r8="classement des clients par ville";
    String r9="list des client par num (ordre decroissant)";
    String r10="Lister les désignations de produits dont le prix est supérieur à 1000 DA";
    String r11="les désignations de produits dont le prix est compris entre 10 et 1000 DA";
    String r12="les désignations de produits dont le prix n’est pas compris entre 10 et 1000 DA.";
    
    
    String r13="les noms et prénoms des clients avec les numéros de  commandes ainsi que la date de commande";
    String r14="les noms et prénoms des clients avec les numéros de  commandes ainsi que la date de commande dont les clients habitent à Tiaret";
    String r15="les noms et prénoms des clients et la date de commande ainsi que la date de facture dont la commande est facturée dans la même journée.";
    String r16="Afficher tous les produits et les quantités commandées par le client numéro 01";
     String r17="tous les produits et les quantités facturées  par le client numéro 01";
   // String r18="les Prix des produits avec une TVA à 17 %";

    //String r19="la facture du client numéro 0\"1(Ref_p, Qte_f, P_U_p, Montant).";
    String r20="le nombre de commandes";
    String r21="la somme de toutes les quantités commandées";
    String r22="la somme des quantités commandées à chaque client";
    
    
    String r23="le nombre de commandes par client";
    String r24="les clients qui ont passé un nombre de commandes moins de 3";
  

    /**
     * Creates new form Intro
     */
    public Intro() {
        setUndecorated(true);
       
        initComponents();
      
     model=(DefaultTableModel )jTable2.getModel();
     model2=(DefaultTableModel )jTable1.getModel();
     model3=(DefaultTableModel )jTable3.getModel();
     model4=(DefaultTableModel )jTable4.getModel();
     jPanel9.setVisible(false);
     jPanel10.setVisible(false);
     jPanel11.setVisible(false);jPanel9.setVisible(false);
      choice1.add("________________");
    
     choice1.add(r1);
     choice1.add(r2);
     choice1.add(r5);
     choice1.add(r6);
     choice1.add(r3);
     choice1.add(r4);
     choice1.add(r7);
    
     choice1.add(r8);
     choice1.add(r9);
      choice2.add("________________");
    
     choice2.add(r10);
     choice2.add(r11);
     choice2.add(r12);
       choice3.add("________________");
     choice3.add(r13);
     
      choice3.add(r14);
       choice3.add(r16);
       choice3.add(r20);
       choice3.add(r21);
        choice3.add(r22);
         choice3.add(r23);
          choice3.add(r24);
           choice4.add("________________");
     choice4.add(r15);
      choice4.add(r17);
    /* choice2.add(r3);
     choice2.add(r4);
     choice2.add(r7);
    
     choice1.add(r8);
     choice1.add(r9);*/
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        choice1 = new java.awt.Choice();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        choice2 = new java.awt.Choice();
        jButton4 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        choice3 = new java.awt.Choice();
        jButton2 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        choice4 = new java.awt.Choice();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bg.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jPanel3.setBackground(new java.awt.Color(0, 204, 204));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("COMMANDES");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/order.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(88, 88, 88))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel4)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));
        jPanel4.setForeground(new java.awt.Color(0, 204, 204));
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel4MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CLIENTS");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/boy.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel5)
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(22, 22, 22))
        );

        jPanel5.setBackground(new java.awt.Color(0, 204, 204));
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("PRODUITS");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/product.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel6)
                .addGap(44, 44, 44)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(26, 26, 26))
        );

        jPanel6.setBackground(new java.awt.Color(0, 204, 204));
        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel6MouseClicked(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("FACTURES");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/bill.png"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel9)
                .addGap(33, 33, 33)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Administration/Gestion_______________");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jLabel2)
                .addContainerGap(265, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(0, 204, 204));
        jPanel7.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel7MouseDragged(evt);
            }
        });
        jPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel7MousePressed(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/cross.png"))); // NOI18N
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 191, Short.MAX_VALUE)
                .addComponent(jLabel10))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10)
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setForeground(new java.awt.Color(255, 255, 255));

        jTable2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num Client", "Nom Client", "Prenom Client", "Adresse Client"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.setAutoscrolls(false);
        jTable2.setGridColor(new java.awt.Color(255, 255, 255));
        jTable2.setIntercellSpacing(new java.awt.Dimension(5, 5));
        jTable2.setRowHeight(25);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(10);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(10);
        }

        jButton1.setBackground(new java.awt.Color(0, 204, 204));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Display");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        choice1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        choice1.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(22, 22, 22)))
                .addContainerGap(227, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num Produit", "Libellè", "Prix"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoscrolls(false);
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jTable1.setIntercellSpacing(new java.awt.Dimension(5, 5));
        jTable1.setRowHeight(25);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(10);
        }

        choice2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        choice2.setForeground(new java.awt.Color(255, 51, 51));

        jButton4.setBackground(new java.awt.Color(0, 204, 204));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Display");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(choice2, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(choice2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jTable3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num Client", "Nom Client", "Prenom Client", "Numero de commande", "Date de commande", "Libellè", "Qte commandèe", "Nombre de commande"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable3.setAutoscrolls(false);
        jTable3.setGridColor(new java.awt.Color(255, 255, 255));
        jTable3.setIntercellSpacing(new java.awt.Dimension(5, 5));
        jTable3.setRowHeight(25);
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setResizable(false);
            jTable3.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable3.getColumnModel().getColumn(1).setResizable(false);
            jTable3.getColumnModel().getColumn(1).setPreferredWidth(10);
            jTable3.getColumnModel().getColumn(2).setResizable(false);
            jTable3.getColumnModel().getColumn(2).setPreferredWidth(10);
        }

        choice3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        choice3.setForeground(new java.awt.Color(255, 51, 51));

        jButton2.setBackground(new java.awt.Color(0, 204, 204));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Display");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(choice3, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(choice3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        jTable4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom client", "Prenom client", "date commande", "date facture", "Produit", "Qte facturèe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable4.setAutoscrolls(false);
        jTable4.setGridColor(new java.awt.Color(255, 255, 255));
        jTable4.setIntercellSpacing(new java.awt.Dimension(5, 5));
        jTable4.setRowHeight(25);
        jScrollPane4.setViewportView(jTable4);
        if (jTable4.getColumnModel().getColumnCount() > 0) {
            jTable4.getColumnModel().getColumn(0).setResizable(false);
            jTable4.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable4.getColumnModel().getColumn(1).setResizable(false);
            jTable4.getColumnModel().getColumn(1).setPreferredWidth(10);
            jTable4.getColumnModel().getColumn(2).setResizable(false);
            jTable4.getColumnModel().getColumn(2).setPreferredWidth(10);
        }

        choice4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        choice4.setForeground(new java.awt.Color(255, 51, 0));

        jButton3.setBackground(new java.awt.Color(0, 204, 204));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Display");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(choice4, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addContainerGap(222, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(choice4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(162, Short.MAX_VALUE))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 22, Short.MAX_VALUE))))))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseClicked
        // TODO add your handling code here:
        jPanel8.setVisible(true);
         jPanel9.setVisible(false);
          jPanel10.setVisible(false);
           jPanel11.setVisible(false);
        jPanel5.setBackground(new Color(0,204,204));
jPanel4.setBackground(new Color(0,153,153));
jPanel3.setBackground(new Color(0,204,204));
jPanel6.setBackground(new Color(0,204,204));
       
    }//GEN-LAST:event_jPanel4MouseClicked

    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
 jPanel8.setVisible(false);
         jPanel9.setVisible(true);
          jPanel10.setVisible(false);
           jPanel11.setVisible(false);
jPanel9.setVisible(true);
jPanel5.setBackground(new Color(0,153,153));
jPanel4.setBackground(new Color(0,204,204));
jPanel3.setBackground(new Color(0,204,204));
jPanel6.setBackground(new Color(0,204,204));
   
    }//GEN-LAST:event_jPanel5MouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        // TODO add your handling code here:
        
        jPanel8.setVisible(false);
         jPanel9.setVisible(false);
          jPanel10.setVisible(true);
           jPanel11.setVisible(false);
jPanel10.setVisible(true);
jPanel5.setBackground(new Color(0,204,204));
jPanel4.setBackground(new Color(0,204,204));
jPanel3.setBackground(new Color(0,153,153));
jPanel6.setBackground(new Color(0,204,204));
    }//GEN-LAST:event_jPanel3MouseClicked

    private void jPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseClicked
        // TODO add your handling code here:
         jPanel8.setVisible(false);
         jPanel9.setVisible(false);
          jPanel10.setVisible(false);
           jPanel11.setVisible(true);
       jPanel5.setBackground(new Color(0,204,204));
jPanel4.setBackground(new Color(0,204,204));
jPanel3.setBackground(new Color(0,204,204));
jPanel6.setBackground(new Color(0,153,153));
    }//GEN-LAST:event_jPanel6MouseClicked

    private void jPanel7MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseDragged
        // TODO add your handling code here:
        int x=evt.getXOnScreen();
        int y=evt.getYOnScreen();
        this.setLocation(x-mouseX, y-mouseY);
    }//GEN-LAST:event_jPanel7MouseDragged

    private void jPanel7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MousePressed
        // TODO add your handling code here:
        mouseX=evt.getX();
        mouseY=evt.getY();  
    }//GEN-LAST:event_jPanel7MousePressed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
       
          PreparedStatement pstmt=null;
          ResultSet rs=null;
          Connection conn,conn2;
         // String state1="tiaret";
         
      
          conn2=Connec.connectionDB();
            conn=Connec.connectionDB2();
          
         String n=choice1.getSelectedItem();
         model.setRowCount(0);
         if(n.equals(r1)){
              String mat,nom,state;
         
        try {
          
            pstmt=conn2.prepareStatement("SELECT * from client_alger");
        
        
          rs=pstmt.executeQuery();
            while(rs.next()){
               mat=rs.getString("num_client");
              nom=rs.getString("nom_client");
               state=rs.getString("adresse_client");
           model.insertRow(model.getRowCount(), new Object[]{mat,nom,state});
        
       
            }
             
        } catch (Exception ex) {
                System.out.println("error");
         
        }
           try {
          
            pstmt=conn.prepareStatement("SELECT * from client_oran");
        
        
          rs=pstmt.executeQuery();
            while(rs.next()){
                 mat=rs.getString("num_client");
               nom=rs.getString("nom_client");
               state=rs.getString("adresse_client");
               model.insertRow(model.getRowCount(), new Object[]{mat,nom,state});
           
           
       
            }
             
        } catch (Exception ex) {
                System.out.println("error");
         
        }
         
         
           
         
         }else    if(n.equals(r2)){
         
        try {
           pstmt=conn.prepareStatement("SELECT * FROM client where adresse_client='tiaret'");
       
         
          rs=pstmt.executeQuery();
           System.out.println("3");
            while(rs.next()){
                 String mat=rs.getString(1);
              String nom=rs.getString(2);
              String state=rs.getString(3);
           
             model.insertRow(model.getRowCount(), new Object[]{mat,nom,state});
       
            }
             
        } catch (Exception ex) {
                System.out.println("error");
         
        }}else    if(n.equals(r5)){
         
        try {
           pstmt=conn.prepareStatement("SELECT * FROM client where adresse_client='tiaret' or adresse_client='alger' or adresse_client='oran'");
       
         
          rs=pstmt.executeQuery();
           System.out.println("3");
            while(rs.next()){
                 String mat=rs.getString(1);
              String nom=rs.getString(2);
              String state=rs.getString(3);
           
             model.insertRow(model.getRowCount(), new Object[]{mat,nom,state});
       
            }
             
        } catch (Exception ex) {
                System.out.println("error");
         
        }}else    if(n.equals(r6)){
         
        try {
           pstmt=conn.prepareStatement("SELECT * FROM client where adresse_client is null");
       
         
          rs=pstmt.executeQuery();
           System.out.println("3");
            while(rs.next()){
                 String mat=rs.getString(1);
              String nom=rs.getString(2);
              String state=rs.getString(3);
           
             model.insertRow(model.getRowCount(), new Object[]{mat,nom,state});
       
            }
             
        } catch (Exception ex) {
                System.out.println("error");
         
        }}else    if(n.equals(r3)){
         
        try {
           pstmt=conn.prepareStatement("SELECT * FROM client where nom_client LIKE 'm%'");
       
         
          rs=pstmt.executeQuery();
           System.out.println("3");
            while(rs.next()){
                 
              String nom=rs.getString(2);
              String prenom=rs.getString(3);
           
             model.insertRow(model.getRowCount(), new Object[]{" ",nom,prenom});
       
            }
             
        } catch (Exception ex) {
                System.out.println("error");
         
        }}else    if(n.equals(r4)){
         
        try {
           pstmt=conn.prepareStatement("SELECT * FROM client where nom_client not LIKE 'm%'");
       
         
          rs=pstmt.executeQuery();
           System.out.println("3");
            while(rs.next()){
              
              String nom=rs.getString(2);
              String prenom=rs.getString(4);
           
             model.insertRow(model.getRowCount(), new Object[]{" ",nom,prenom});
       
            }
             
        } catch (Exception ex) {
                System.out.println("error");
         
        }}else    if(n.equals(r7)){
         
        try {
           pstmt=conn.prepareStatement("SELECT * FROM client");
       
         
          rs=pstmt.executeQuery();
        
            while(rs.next()){
               
              String nom=rs.getString(2);
              
           
             model.insertRow(model.getRowCount(), new Object[]{" ",nom});
       
            }
             
        } catch (Exception ex) {
                System.out.println("error");
         
        }}else    if(n.equals(r8)){
         
        try {
           pstmt=conn.prepareStatement("SELECT * FROM client ORDER BY adresse_client");
       
         
          rs=pstmt.executeQuery();
        
            while(rs.next()){
               
               String mat=rs.getString(1);
              String nom=rs.getString(2);
              String state=rs.getString(3);
              String prenom=rs.getString(4);
              
           
             model.insertRow(model.getRowCount(), new Object[]{mat,nom,prenom,state});
       
            }
             
        } catch (Exception ex) {
                System.out.println("error");
         
        }}else    if(n.equals(r9)){
         
        try {
           pstmt=conn.prepareStatement("SELECT * FROM client ORDER BY num_client DESC");
       
         
          rs=pstmt.executeQuery();
        
            while(rs.next()){
               
               String mat=rs.getString(1);
              String nom=rs.getString(2);
              String state=rs.getString(3);
              String prenom=rs.getString(4);
              
           
             model.insertRow(model.getRowCount(), new Object[]{mat,nom,prenom,state});
       
            }
             
        } catch (Exception ex) {
                System.out.println("error");
         
        }}
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
           PreparedStatement pstmt=null;
          ResultSet rs=null;
          Connection conn;
      
          conn=Connec.connectionDB2();
           model3.setRowCount(0);
         String n=choice3.getSelectedItem();
     
         if(n.equals(r13)){
         
        try {
           pstmt=conn.prepareStatement("SELECT client.nom_client ,client.prenom,commande.num_commande,commande.date from client inner join commande on client.num_client = commande.num_client");
        
        
          rs=pstmt.executeQuery();
            while(rs.next()){
                 String nom=rs.getString("nom_client");
              String prenom=rs.getString("prenom");
              String numcom=rs.getString("num_commande");
              String date=rs.getString("date");
           
             model3.insertRow(model3.getRowCount(), new Object[]{" ",nom,prenom,numcom,date});
       
            }
             
        } catch (Exception ex) {
                System.out.println("error");
         
        }}else    if(n.equals(r14)){
         
        try {
           pstmt=conn.prepareStatement("SELECT client.nom_client ,client.prenom,commande.num_commande,commande.date from client inner join commande on client.num_client = commande.num_client where adresse_client='tiaret'");
        
        
          rs=pstmt.executeQuery();
            while(rs.next()){
                 String nom=rs.getString("nom_client");
              String prenom=rs.getString("prenom");
              String numcom=rs.getString("num_commande");
              String date=rs.getString("date");
           
             model3.insertRow(model3.getRowCount(), new Object[]{nom,prenom,numcom,date});
       
            }
             
        } catch (Exception ex) {
                System.out.println("error");
         
        }}  else    if(n.equals(r16)){
         
        try {
         
            pstmt=conn.prepareStatement("SELECT * from commande,commander_produit,produit where commande.num_commande=commander_produit.num_commande and produit.num_produit=commander_produit.num_produit and commande.num_client=1");
         
        
        
          rs=pstmt.executeQuery();
            while(rs.next()){
                 String lib=rs.getString("libelle");
              String qc=rs.getString("quantite_commandee");
          
           
             model3.insertRow(model3.getRowCount(), new Object[]{"","","",""," ",lib,qc});
       
            }
             
        } catch (Exception ex) {
                System.out.println(ex.getMessage());
         
        }}  else    if(n.equals(r20)){
         
        try {
         
            pstmt=conn.prepareStatement("SELECT COUNT(num_commande) as nc "+"FROM commande");
         
        
        
          rs=pstmt.executeQuery();
            while(rs.next()){
                 String nc=rs.getString("nc");
             
          
           
             model3.insertRow(model3.getRowCount(), new Object[]{"","","","","","",nc});
       
            }
             
        } catch (Exception ex) {
                System.out.println(ex.getMessage());
         
        }}else    if(n.equals(r21)){
         
        try {
         
            pstmt=conn.prepareStatement("SELECT sum(quantite_commandee) as somme "+"FROM commander_produit");
         
        
        
          rs=pstmt.executeQuery();
            while(rs.next()){
                 String nc=rs.getString("somme");
             
          
           
             model3.insertRow(model3.getRowCount(), new Object[]{"","","","",""," ",nc});
       
            }
             
        } catch (Exception ex) {
                System.out.println(ex.getMessage());
         
        }}else    if(n.equals(r22)){
         
        try {
         
            pstmt=conn.prepareStatement("select commande.num_client , sum(quantite_commandee) as somme from commande ,commander_produit ,produit where commande.num_commande=commander_produit.num_commande and produit.num_produit=commander_produit.num_produit GROUP BY commande.num_client");
         
        
        
          rs=pstmt.executeQuery();
            while(rs.next()){
                 String mat=rs.getString("num_client");
                    String qc=rs.getString("somme");
             
          
           
             model3.insertRow(model3.getRowCount(), new Object[]{mat,"","","","","",qc});
       
            }
             
        } catch (Exception ex) {
                System.out.println(ex.getMessage());
         
        }}  else    if(n.equals(r23)){
         
        try {
         
            pstmt=conn.prepareStatement("SELECT num_client,COUNT(num_commande) as nc FROM commande group by num_client");
         
        
        
          rs=pstmt.executeQuery();
            while(rs.next()){
                 String mat=rs.getString("num_client");
                 String nc=rs.getString("nc");
             
          
           
             model3.insertRow(model3.getRowCount(), new Object[]{mat,"","","","","",nc});
       
            }
             
        } catch (Exception ex) {
                System.out.println(ex.getMessage());
         
        }}  else    if(n.equals(r24)){
         
        try {
         
            pstmt=conn.prepareStatement("select commande.num_client , count(commande.num_commande) from commande ,commander_produit ,produit where commande.num_commande=commander_produit.num_commande and produit.num_produit=commander_produit.num_produit  GROUP BY commande.num_client HAVING count(commande.num_commande)< 3");
         
        
        
          rs=pstmt.executeQuery();
            while(rs.next()){
                 String mat=rs.getString("num_client");
                   
             
          
           
             model3.insertRow(model3.getRowCount(), new Object[]{mat});
       
            }
             
        } catch (Exception ex) {
                System.out.println(ex.getMessage());
         
        }} 
        
        
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
              PreparedStatement pstmt=null;
          ResultSet rs=null;
          Connection conn;
      
          conn=Connec.connectionDB2();
           model4.setRowCount(0);
         String n=choice4.getSelectedItem();
         
         if(n.equals(r15)){
         
        try {
           pstmt=conn.prepareStatement("SELECT client.nom_client,client.prenom ,commande.date,facture.date from client inner join commande on client.num_client = commande.num_client inner join facture on facture.num_commande=commande.num_commande where facture.date = commande.date");
        
        
          rs=pstmt.executeQuery();
            while(rs.next()){
                 String nom=rs.getString("nom_client");
              String prenom=rs.getString("prenom");
              String datecom=rs.getString("date");
              String datefac=rs.getString("date");
           
             model4.insertRow(model4.getRowCount(), new Object[]{nom,prenom,datecom,datefac});
       
            }
             
        } catch (Exception ex) {
                System.out.println("error");
         
        }}else    if(n.equals(r17)){
         
        try {
         
            pstmt=conn.prepareStatement("SELECT * from commande,commander_produit,produit,facture, facturer_produit where commande.num_commande=commander_produit.num_commande and produit.num_produit=commander_produit.num_produit and facturer_produit.num_produit=produit.num_produit and facturer_produit.num_facture=facture.num_facture and commande.num_client=1");
         
        
        
          rs=pstmt.executeQuery();
            while(rs.next()){
                 String lib=rs.getString("libelle");
              String qc=rs.getString("quantite_facturee");
             
          
           
             model4.insertRow(model4.getRowCount(), new Object[]{"","","","",lib,qc});
       
            }
             
        } catch (Exception ex) {
                System.out.println(ex.getMessage());
         
        }} 
        
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
          PreparedStatement pstmt=null;
          ResultSet rs=null;
          Connection conn,conn2;
          model2.setRowCount(0);
      
          conn=Connec.connectionDB2();
            conn2=Connec.connectionDB();
         String n=choice2.getSelectedItem();
          
         if(n.equals(r10)){
         int id;String lib;int p;
        try {
             try {
                 pstmt=conn.prepareStatement("SELECT * from produit_prix where  prix > 1000");
             } catch (SQLException ex) {
                 Logger.getLogger(Intro.class.getName()).log(Level.SEVERE, null, ex);
             }
        
        
             try {
                 rs=pstmt.executeQuery();
             } catch (SQLException ex) {
                 Logger.getLogger(Intro.class.getName()).log(Level.SEVERE, null, ex);
             }
             try {
                 while(rs.next()){
                     id =rs.getInt("num_produit");
                      p=rs.getInt("prix");
                     
                     //***
                     pstmt=conn2.prepareStatement("SELECT * from produit_des where  num_produit="+id);
                     
                     
                     rs=pstmt.executeQuery();
                     while(rs.next()){
                         
                          lib=rs.getString("libelle");
                         //
                         
                         
                         model2.insertRow(model2.getRowCount(), new Object[]{" ",lib,p});
                         
                     }
                     
                 }    } catch (SQLException ex) {
                 Logger.getLogger(Intro.class.getName()).log(Level.SEVERE, null, ex);
             }
catch (Exception ex) {
                System.out.println("error");
         
        }
        
        
         
         
         
         
         }catch(Exception e){
         }
         }
         
         
         
         
         
         
         
         
         
         else   if(n.equals(r11)){
         
        try {
           pstmt=conn.prepareStatement("SELECT * from produit where  prix between 10 and 1000");
        
        
          rs=pstmt.executeQuery();
            while(rs.next()){
               String lib=rs.getString("libelle");
           
           
             model2.insertRow(model2.getRowCount(), new Object[]{" ",lib});
       
            }
             
        } catch (Exception ex) {
                System.out.println("error");
         
        }} else   if(n.equals(r12)){
         
        try {
           pstmt=conn.prepareStatement("SELECT * from produit where  prix not between 10 and 1000");
        
        
          rs=pstmt.executeQuery();
            while(rs.next()){
        String lib=rs.getString("libelle");
           
           
             model2.insertRow(model2.getRowCount(), new Object[]{" ",lib});
       
            }
             
        } catch (Exception ex) {
                System.out.println("error");
         
        }}
    }//GEN-LAST:event_jButton4MouseClicked

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Intro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Intro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Intro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Intro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Intro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private java.awt.Choice choice1;
    private java.awt.Choice choice2;
    private java.awt.Choice choice3;
    private java.awt.Choice choice4;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    // End of variables declaration//GEN-END:variables
}
